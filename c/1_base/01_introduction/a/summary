    C语言程序是一个或多个函数组成的。每一个C程序都必须包含一个名为main()的函数， 因为当程序开始时要调用该函数。一个简单的函数结构如下：函数头后面紧跟着一个开始花括号，后面是构成函数体的语句，然后是起终止作用的花括号。
    每个C语句都是一个针对计算机的命令，所以一个分号作为结束标志。声明语句为变量指定一个名字并指明该变量中存储的数据类型。变量名是标识符的例子。赋值语句把值赋给变量，或者更一般地说，是把值赋给存储区域。函数调用语句会导致所指定函数的执行。当被调函数执行完毕以后，程序会返回到函数调用之后的语句继续进行。
    printf()函数用于输出语句和变量的值。
    一门语言的语法是一套规则，用于管理这种语言中的合法语句组织在一起的方式。语句的语义就是它所表达的意思。编译器可以帮助您发现语法上的错误，但是程序里的语义错误只有在编译完之后擦能从程序的行为中表现出来。检测语义错误可以包括跟踪程序的状态，即程序每执行一步之后所有变量的值。
    关键字是C语言的词汇。

key:

    计算机编程是一件富有挑战性的事情。它需要抽象的、概念性的思考并细致地对待细节问题。你会发现编译器强迫你注意细节问题。当你跟你朋友谈话时，你可以用错几个字，犯一两个语法错误，可能还有几个没有结束的句子，但朋友能明白你想说什么。而编译器却不允许这样做：对编译器来说，几乎正确仍然等于错误。
    对于今天，你的目标应该是理解什么是 C 程序。你可以这么理解：程序是对你希望计算机采取何种行为的描述。编译器负责完成把你的描述转换成底层的机器语言的细节工作（作为编译器工作量的一个衡量，它能从 1KB 的源码文件中生成 60KB 的可执行文件：大量的机器语言只是代表了一个简单的 C 程序）。由于编译器不具有真正的智能，所以必须把你对程序的描述用编译器的术语表达出来，这些术语就是 C 标准所设置的格式规则（尽管有些约束，但总比直接用机器语言表达方便得多）！
    编译器希望收到特定格式的指令，这一点我们在本章中已经详细地描述过。作为程序员，你的工作就是一个编译器（由 C 标准指导）能成功处理的框架内表达出你关于程序应采取何种行为的想法。
