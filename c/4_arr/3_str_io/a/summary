    字符串是作为一个单位处理的一系列字符。在 C 中，以空字符结束的一系列字符代表一个字符串，空字符就是 ASCII 为 0 字符。字符串可以存储在字符数组中。一个数组就是一系列项目或元素，并且所有这些项目或元素的类型都相同。要声明名为 name 并有 30 个 char 类型的元素的数组，请使用一下语言：
    char name[30];
    请确保分配足够多的元素来存放整个字符串（包括空字符）。
    字符串常量用双引号引起来的字符串表示：
    “This is an example of a string”
    strlen() 函数（在string.h文件中定义）可以用于获得一个字符串的长度（不包括终止的空字符）。scanf() 函数在使用 %s 说明符时，可以用于读取包含一个单词的字符串。
    C 预处理器在源代码程序中搜索预处理器指令（预处理指令以 # 符号开始），并在程序开始编译之前处理它们。#include 指令使处理器把另一个文件的内容添加到文件中该指令所在的位置。使用 #include 指令可以创建明显常量，也就是代表常量的符号。limits.h 和 float.h 头为呢见使用 #define 定义了一套表示整数和浮点类型的各个属性的常量。也可以使用 const 修饰副来创建符号常量。
    printf() 和 scanf() 函数对输入和输出提供多种支持。二者都使用一个包含内嵌转换说明符的控制字符串来指示将要读取或打印的数据想的类型和数目。还可以使用转换说明符来控制输出的外观：字段宽度、小数点位置和字段内的布局。

key:
    C 的 char 类型表示一个字符。要表示一个字符序列，C 使用字符串。字符串的一种形式是字符常量，其中字符用双引号括起来。例如 “hello world”。也可以在字符数组中存储一个字符串，字符数组由内存中相邻的字节组成。字符串，无论是表达成一个常量还是存储在字符数组中，都要以一个被成为空字符的隐藏字符来结束。
    在程序中最好使用 #define 或是关键字 const 以符号代表数字常量。符号常量使程序可读性更强，更易于维护和修改。
    标准 C 输入和输出函数 scanf() 和 printf() 都使用一个系统，在这个系统中必须使第一个参数中的类型说明符和后续参数中的值相匹配。比如说，把诸如 %d 这样的 int 说明符与一个浮点值相匹配会产生奇怪的结果。必须小心谨慎，以确保说明符的数目和类型与函数的其余参数想匹配。如果是 scanf()，一定要记得给变量名前加上地址运算符（&）。
    空白字符（制表符、空格和换行符）对于 scanf() 如何处理输入起着至关重要的作用。除了在 %c 模式（它读取下一个字符）下外，在读取输入时，scanf() 会跳过空白字符直到第一个非空白字符处。然后它会一直读取字符，直到遇到空白字符，或遇到一个不符合正在读取的类型的字符。我们考虑如果让几个不同的 scanf() 输入模式读取相同的输入行，将会产生什么情况。假设有如下输入行：
    -13.45e12# 0
    首先，假设我们使用 %d 模式，scanf() 会读取三个字符（-13）并在小数点处停止，将小数点作为下一个输入字符。然后，scanf() 将会把字符序列 -13 转换成相应的整数值，并将该值存储在目标整型变量中。接着，假定 scanf() 以 %f 模式读取相同的行，它将会读取字符-13.45E12，并在 # 符号处停止，将它作为下一个输入字符。然后它把字符序列 -13.45E12 转换成相应的浮点数值，并将该值存储在目标浮点型变量中。假定 scanf() 以 %s 模式读取相同的行，它将会读取 -13.45E12#，并在空格处停止，将这个空格作为下一个输入字符。然后它将把这 10 个字符的字符代码存储到目标字符数组中，并在结尾附加一个空字符。最后，假定 scanf() 使用 %c 说明副读取相同的行，它将会读取并存储第一个字符，在这里是‘-’
